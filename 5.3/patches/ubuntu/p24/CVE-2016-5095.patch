Backport of:

From 41fc3c76e97a36ff3b505da7d704ca17bb171fdf Mon Sep 17 00:00:00 2001
From: Stanislav Malyshev <stas@php.net>
Date: Mon, 9 May 2016 22:17:20 -0700
Subject: [PATCH] Add check for string overflow to all string add operations

---
 Zend/zend_operators.c | 7 +++++++
 1 file changed, 7 insertions(+)

Index: php5-5.3.10/Zend/zend_operators.c
===================================================================
--- php5-5.3.10.orig/src/Zend/zend_operators.c	2016-07-28 15:04:40.015766864 -0400
+++ php5-5.3.10/src/Zend/zend_operators.c	2016-07-28 15:14:34.235536580 -0400
@@ -1199,7 +1199,13 @@
 /* must support result==op1 */
 ZEND_API int add_char_to_string(zval *result, const zval *op1, const zval *op2) /* {{{ */
 {
-	Z_STRLEN_P(result) = Z_STRLEN_P(op1) + 1;
+	int length = Z_STRLEN_P(op1) + 1;
+
+	if (UNEXPECTED(length < 0)) {
+		zend_error(E_ERROR, "String size overflow");
+	}
+
+	Z_STRLEN_P(result) = length;
 	Z_STRVAL_P(result) = (char *) erealloc(Z_STRVAL_P(op1), Z_STRLEN_P(result)+1);
 	Z_STRVAL_P(result)[Z_STRLEN_P(result) - 1] = (char) Z_LVAL_P(op2);
 	Z_STRVAL_P(result)[Z_STRLEN_P(result)] = 0;
@@ -1213,6 +1219,10 @@
 {
 	int length = Z_STRLEN_P(op1) + Z_STRLEN_P(op2);
 
+	if (UNEXPECTED(length < 0)) {
+		zend_error(E_ERROR, "String size overflow");
+	}
+
 	Z_STRVAL_P(result) = (char *) erealloc(Z_STRVAL_P(op1), length+1);
 	memcpy(Z_STRVAL_P(result)+Z_STRLEN_P(op1), Z_STRVAL_P(op2), Z_STRLEN_P(op2));
 	Z_STRVAL_P(result)[length] = 0;

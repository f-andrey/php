#
# NOTE: THIS DOCKERFILE IS GENERATED VIA "update.sh"
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

FROM ubuntu:artful

# Set the env variable DEBIAN_FRONTEND to noninteractive
ENV DEBIAN_FRONTEND noninteractive

# prevent Debian's PHP packages from being installed
# https://github.com/docker-library/php/pull/542
RUN set -eux; \
	{ \
		echo 'Package: php*'; \
		echo 'Pin: release *'; \
		echo 'Pin-Priority: -1'; \
	} > /etc/apt/preferences.d/no-debian-php

# persistent / runtime deps
ENV PHPIZE_DEPS \
		autoconf \
		dpkg-dev \
		file \
		g++ \
		gcc \
		libc-dev \
		make \
		pkg-config \
		re2c
RUN apt-get update && apt-get install -y \
		$PHPIZE_DEPS \
		ca-certificates \
		curl \
		dirmngr \
		libargon2-0 \
		libcurl3 \
		libedit2 \
		libsqlite3-0 \
		libssl1.0 \
		libtidy5 \
		libpcre3 \
		libxml2 \
		libxmlrpc-epi0 \
		libxslt1.1 \
		libzip4 \
		libwebp6 \
		mime-support \
		ssmtp \
		tzdata \
		ucf \
		xz-utils \
		zlib1g \
	--no-install-recommends && rm -r /var/lib/apt/lists/*

ENV PHP_INI_DIR /usr/local/etc/php
RUN mkdir -p $PHP_INI_DIR/conf.d

##<autogenerated>##
ENV PHP_EXTRA_CONFIGURE_ARGS --enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data
##</autogenerated>##

# Apply stack smash protection to functions using local buffers and alloca()
# Make PHP's main executable position-independent (improves ASLR security mechanism, and has no performance impact on x86_64)
# Enable optimization (-O2)
# Enable linker optimization (this sorts the hash buckets to improve cache locality, and is non-default)
# Adds GNU HASH segments to generated executables (this is used if present, and is much faster than sysv hash; in this configuration, sysv hash is also generated)
# https://github.com/docker-library/php/issues/272
ENV PHP_CFLAGS="-fstack-protector-strong -fpic -fpie -O2"
ENV PHP_CPPFLAGS="$PHP_CFLAGS"
ENV PHP_LDFLAGS="-Wl,-O1 -Wl,--hash-style=both -pie"

ENV GPG_KEYS 1729F83938DA44E27BA0F4D3DBDB397470D12172 B1B44D8F021E4E2D6021E995DC9FF8D3EE5AF27F

ENV PHP_VERSION 7.2.2
ENV PHP_URL="https://secure.php.net/get/php-7.2.2.tar.bz2/from/this/mirror" PHP_ASC_URL="https://secure.php.net/get/php-7.2.2.tar.bz2.asc/from/this/mirror"
ENV PHP_SHA256="f841ac58e17471f2241ea892b34edb01dc9b93ad9f661ffe4e3f1f476a8f4aee" PHP_MD5=""

RUN set -xe; \
	\
	fetchDeps=' \
		wget \
		subversion \
	'; \
	if ! command -v gpg > /dev/null; then \
		fetchDeps="$fetchDeps \
			dirmngr \
			gnupg \
		"; \
	fi; \
	apt-get update; \
	apt-get install -y --no-install-recommends $fetchDeps; \
	rm -rf /var/lib/apt/lists/*; \
	\
	mkdir -p /usr/src; \
	cd /usr/src; \
	\
	wget -O php.tar.bz2 "$PHP_URL"; \
	\
	if [ -n "$PHP_SHA256" ]; then \
		echo "$PHP_SHA256 *php.tar.bz2" | sha256sum -c -; \
	fi; \
	if [ -n "$PHP_MD5" ]; then \
		echo "$PHP_MD5 *php.tar.bz2" | md5sum -c -; \
	fi; \
	\
	if [ -n "$PHP_ASC_URL" ]; then \
		wget -O php.tar.bz2.asc "$PHP_ASC_URL"; \
		export GNUPGHOME="$(mktemp -d)"; \
		for key in $GPG_KEYS; do \
			gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"; \
		done; \
		gpg --batch --verify php.tar.bz2.asc php.tar.bz2; \
		rm -rf "$GNUPGHOME"; \
	fi; \
	\
	svn export https://github.com/f-andrey/php/branches/diphost/7.2/patches /tmp/patches; \
	apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

COPY docker-php-source /usr/local/bin/

RUN set -eux; \
	\
	savedAptMark="$(apt-mark showmanual)"; \
	apt-get update; \
	apt-get install -y --no-install-recommends \
		automake \
		autoconf \
		libtool \
		libargon2-0-dev \
		libcurl4-openssl-dev \
		libedit-dev \
		libsqlite3-dev \
		libssl-dev \
		libxml2-dev \
		freetds-dev \
		libbz2-dev \
		libc-client2007e-dev \
		libcurl4-openssl-dev \
		libfreetype6-dev \
		libgd2-dev \
		libgdbm-dev \
		libgmp-dev \
		libjpeg-dev \
		libkrb5-dev \
		libmcrypt-dev \
		libmhash-dev \
		libmysqlclient-dev \
		libpcre3-dev \
		libpng-dev \
		libpspell-dev \
		libsasl2-dev \
		libsnmp-dev \
		libtidy-dev \
		libwebp-dev \
		libxml2-dev \
		libxmlrpc-epi-dev \
		libxpm-dev \
		libxslt1-dev \
		libzip-dev \
		unixodbc-dev \
		zlib1g-dev \
		${PHP_EXTRA_BUILD_DEPS:-} \
	; \
	rm -rf /var/lib/apt/lists/*; \
	\
	export \
		CFLAGS="$PHP_CFLAGS" \
		CPPFLAGS="$PHP_CPPFLAGS" \
		LDFLAGS="$PHP_LDFLAGS" \
	; \
	docker-php-source extract; \
	cd /usr/src/php; \
	gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"; \
	debMultiarch="$(dpkg-architecture --query DEB_BUILD_MULTIARCH)"; \
# https://bugs.php.net/bug.php?id=74125
	if [ ! -d /usr/include/curl ]; then \
		ln -sT "/usr/include/$debMultiarch/curl" /usr/local/include/curl; \
	fi; \
# Fix libc-client  (libc-client.so require for -fpie)
		ln -sf /usr/lib/libc-client.a /usr/lib/x86_64-linux-gnu/libc-client.a; \
		ln -sf /usr/lib/libc-client.so /usr/lib/x86_64-linux-gnu/libc-client.so; \
# This configure patches
	find /tmp/patches/ -type f -name '*.patch' -print0 | sort -z -t \0 | xargs -0 -I '{}' sh -c "patch -N -p1 -s < '{}'; echo '{}'"; \
	./buildconf --force; \
	apt-get update && apt-get install -y bison flex --no-install-recommends && rm -rf /var/lib/apt/lists/*; \
	PHP_VERSION_CONFIGURE_ARGS=" \
		--with-openssl \
		--with-sqlite3=shared \
		--with-iconv=shared \
		--with-libexpat-dir \
		--with-xmlrpc=shared,/usr \
		--with-pcre-regex=/usr \
		--enable-phpdbg \
		--with-libzip=/usr \
		--enable-opcache=shared \
		--with-webp-dir=/usr \
		--with-xpm-dir= \
	"; \
	PHP_LIST_CONFIGURE_ARGS=" \
#		--with-apxs2=/usr/bin/apxs \
		--disable-cgi \
		--enable-ipv6 \
		--enable-libxml \
		--with-pcre-regex \
		--with-zlib=shared,/usr \
		--with-pcre-dir \
		--with-zlib-dir=/usr \
		--enable-bcmath=shared, \
		--with-bz2=shared \
		--enable-calendar=shared \
		--enable-ctype=shared, \
		--with-curl=shared, \
		--enable-dba=shared, \
		--enable-inifile \
		--enable-flatfile \
		--enable-dom \
		--enable-exif=shared \
		--enable-fileinfo=shared \
		--enable-filter=shared \
		--enable-ftp=shared \
		--with-gd=shared \
		--enable-gd-jis-conv \
		--with-jpeg-dir=/usr \
		--with-png-dir=/usr \
		--with-freetype-dir=/usr \
		--with-gettext=shared \
		--enable-hash \
		--with-imap=shared \
		--with-kerberos \
		--with-imap-ssl \
		--enable-intl=shared \
		--enable-json=shared \
		--enable-mbstring=shared \
		--enable-mbregex \
		--enable-mbregex-backtrack \
		--with-libmbfl \
		--with-onig \
		--enable-mysqlnd=shared \
		--with-mysql-sock \
		--with-mysqli=shared,mysqlnd \
		--with-unixODBC=shared,/usr \
		--enable-pcntl=shared \
		--enable-pdo=shared \
		--with-pdo-mysql=shared,mysqlnd \
		--with-pdo-sqlite=shared,/usr \
		--enable-phar=shared \
		--enable-posix=shared \
		--enable-session=shared \
		--enable-shmop=shared \
		--enable-simplexml=shared \
		--enable-soap=shared \
		--enable-sockets=shared \
		--enable-sysvmsg=shared \
		--enable-sysvsem=shared \
		--enable-sysvshm=shared \
		--enable-tokenizer=shared \
		--enable-wddx=shared \
		--enable-xml \
		--enable-xmlreader=shared \
		--enable-xmlwriter=shared \
		--with-xsl=shared \
		--enable-zip \
		--with-gmp=shared \
		--with-pear \
		--with-system-tzdata \
		--with-libxml-dir=/usr \
		--with-libedit=shared \
		--with-readline=shared \
		--with-gdbm=shared \
		--with-snmp=shared \
		--with-tidy=shared \
		--localstatedir=/var \
		"; \
	./configure \
		--build="$gnuArch" \
		--host="$gnuArch" \
		--disable-all \
		--enable-shared \
		--disable-static \
		--with-config-file-path="$PHP_INI_DIR" \
		--with-config-file-scan-dir="$PHP_INI_DIR/conf.d" \
		\
		--disable-cgi \
		\
# --enable-ftp is included here because ftp_ssl_connect() needs ftp to be compiled statically (see https://github.com/docker-library/php/issues/236)
#		--enable-ftp \
# --enable-mbstring is included here because otherwise there's no way to get pecl to use it properly (see https://github.com/docker-library/php/issues/195)
#		--enable-mbstring \
# --enable-mysqlnd is included here because it's harder to compile after the fact than extensions are (since it's a plugin for several extensions, not an extension in itself)
#		--enable-mysqlnd \
# https://wiki.php.net/rfc/argon2_password_hash (7.2+)
		--with-password-argon2 \
		\
#		--with-curl \
#		--with-libedit \
#		--with-openssl \
#		--with-zlib \
		\
# bundled pcre does not support JIT on s390x
# https://manpages.debian.org/stretch/libpcre3-dev/pcrejit.3.en.html#AVAILABILITY_OF_JIT_SUPPORT
		$(test "$gnuArch" = 's390x-linux-gnu' && echo '--without-pcre-jit') \
		--with-libdir="lib/$debMultiarch" \
		\
		${PHP_LIST_CONFIGURE_ARGS:-} \
		${PHP_VERSION_CONFIGURE_ARGS:-} \
		${PHP_EXTRA_CONFIGURE_ARGS:-} \
	; \
	make -j "$(nproc)"; \
	make install; \
	find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true; \
	make clean; \
	cd /; \
	docker-php-source delete; \
	\
# reset apt-mark's "manual" list so that "purge --auto-remove" will remove all build dependencies
	apt-mark auto '.*' > /dev/null; \
	[ -z "$savedAptMark" ] || apt-mark manual $savedAptMark; \
	find /usr/local -type f -executable -exec ldd '{}' ';' \
		| awk '/=>/ { print $(NF-1) }' \
		| sort -u \
		| xargs -r dpkg-query --search \
		| cut -d: -f1 \
		| sort -u \
		| xargs -r apt-mark manual \
	; \
	apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \
	\
	php --version; \
	\
# https://github.com/docker-library/php/issues/443
	pecl update-channels; \
	rm -rf /tmp/pear ~/.pearrc

COPY docker-php-ext-* docker-php-entrypoint /usr/local/bin/

ENTRYPOINT ["docker-php-entrypoint"]
##<autogenerated>##
WORKDIR /var/www/html

RUN set -ex \
	&& cd /usr/local/etc \
	&& if [ -d php-fpm.d ]; then \
		# for some reason, upstream's php-fpm.conf.default has "include=NONE/etc/php-fpm.d/*.conf"
		sed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf > /dev/null; \
		cp php-fpm.d/www.conf.default php-fpm.d/www.conf; \
	else \
		# PHP 5.x doesn't use "include=" by default, so we'll create our own simple config that mimics PHP 7+ for consistency
		mkdir php-fpm.d; \
		cp php-fpm.conf.default php-fpm.d/www.conf; \
		{ \
			echo '[global]'; \
			echo 'include=etc/php-fpm.d/*.conf'; \
		} | tee php-fpm.conf; \
	fi \
	&& { \
		echo '[global]'; \
		echo 'error_log = /proc/self/fd/2'; \
		echo; \
		echo '[www]'; \
		echo '; if we send this to /proc/self/fd/1, it never appears'; \
		echo 'access.log = /proc/self/fd/2'; \
		echo; \
		echo 'clear_env = no'; \
		echo; \
		echo '; Ensure worker stdout and stderr are sent to the main error log.'; \
		echo 'catch_workers_output = yes'; \
	} | tee php-fpm.d/docker.conf \
	&& { \
		echo '[global]'; \
		echo 'daemonize = no'; \
		echo; \
		echo '[www]'; \
		echo 'listen = 9000'; \
	} | tee php-fpm.d/zz-docker.conf

EXPOSE 9000
CMD ["php-fpm"]
##</autogenerated>##

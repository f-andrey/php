#
# NOTE: THIS DOCKERFILE IS GENERATED VIA "update.sh"
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

FROM ubuntu:xenial

# Set the env variable DEBIAN_FRONTEND to noninteractive
ENV DEBIAN_FRONTEND noninteractive

# persistent / runtime deps
ENV PHPIZE_DEPS \
		autoconf \
		dpkg-dev \
		file \
		g++ \
		gcc \
		libc-dev \
		libpcre3-dev \
		make \
		pkg-config \
		re2c
RUN apt-get update && apt-get install -y \
		$PHPIZE_DEPS \
		ca-certificates \
		curl \
		dirmngr \
		lemon \
		libaio1 \
		libcurl3 \
		libedit2 \
		libnuma1 \
		libsqlite3-0 \
		libssl1.0 \
		libtidy-0.99-0 \
		libpcre3 \
		libxml2 \
		libxmlrpc-epi0 \
		libxslt1.1 \
		libzip4 \
		libwebp5 \
		mime-support \
		ssmtp \
		tzdata \
		ucf \
		xz-utils \
		zlib1g \
	--no-install-recommends && rm -r /var/lib/apt/lists/*

ENV PHP_INI_DIR /usr/local/etc/php
RUN mkdir -p $PHP_INI_DIR/conf.d

##<autogenerated>##
RUN apt-get update \
	&& apt-get install -y --no-install-recommends \
		apache2 \
	&& rm -rf /var/lib/apt/lists/*

ENV APACHE_CONFDIR /etc/apache2
ENV APACHE_ENVVARS $APACHE_CONFDIR/envvars

RUN set -ex \
	\
# generically convert lines like
#   export APACHE_RUN_USER=www-data
# into
#   : ${APACHE_RUN_USER:=www-data}
#   export APACHE_RUN_USER
# so that they can be overridden at runtime ("-e APACHE_RUN_USER=...")
	&& sed -ri 's/^export ([^=]+)=(.*)$/: ${\1:=\2}\nexport \1/' "$APACHE_ENVVARS" \
	\
# setup directories and permissions
	&& . "$APACHE_ENVVARS" \
	&& for dir in \
		"$APACHE_LOCK_DIR" \
		"$APACHE_RUN_DIR" \
		"$APACHE_LOG_DIR" \
		/var/www/html \
	; do \
		rm -rvf "$dir" \
		&& mkdir -p "$dir" \
		&& chown -R "$APACHE_RUN_USER:$APACHE_RUN_GROUP" "$dir"; \
	done

# Apache + PHP requires preforking Apache for best results
RUN a2dismod mpm_event && a2enmod mpm_prefork

# logs should go to stdout / stderr
RUN set -ex \
	&& . "$APACHE_ENVVARS" \
	&& ln -sfT /dev/stderr "$APACHE_LOG_DIR/error.log" \
	&& ln -sfT /dev/stdout "$APACHE_LOG_DIR/access.log" \
	&& ln -sfT /dev/stdout "$APACHE_LOG_DIR/other_vhosts_access.log"

# PHP files should be handled by PHP, and should be preferred over any other file type
RUN { \
		echo '<FilesMatch \.php$>'; \
		echo '\tSetHandler application/x-httpd-php'; \
		echo '</FilesMatch>'; \
		echo; \
		echo 'DirectoryIndex disabled'; \
		echo 'DirectoryIndex index.php index.html'; \
		echo; \
		echo '<Directory /var/www/>'; \
		echo '\tOptions -Indexes'; \
		echo '\tAllowOverride All'; \
		echo '</Directory>'; \
	} | tee "$APACHE_CONFDIR/conf-available/docker-php.conf" \
	&& a2enconf docker-php

ENV PHP_EXTRA_BUILD_DEPS apache2-dev
##</autogenerated>##

# Apply stack smash protection to functions using local buffers and alloca()
# Make PHP's main executable position-independent (improves ASLR security mechanism, and has no performance impact on x86_64)
# Enable optimization (-O2)
# Enable linker optimization (this sorts the hash buckets to improve cache locality, and is non-default)
# Adds GNU HASH segments to generated executables (this is used if present, and is much faster than sysv hash; in this configuration, sysv hash is also generated)
# https://github.com/docker-library/php/issues/272
ENV PHP_CFLAGS="-fstack-protector-strong -fpic -fpie -O2"
ENV PHP_CPPFLAGS="$PHP_CFLAGS"
ENV PHP_LDFLAGS="-Wl,-O1 -Wl,--hash-style=both -pie"

ENV GPG_KEYS 0B96609E270F565C13292B24C13C70B87267B52D 0A95E9A026542D53835E3F3A7DEC4E69FC9C83D7

ENV PHP_VERSION 5.2.17
ENV PHP_URL="http://museum.php.net/php5/php-5.2.17.tar.bz2"
ENV PHP_SHA256="" PHP_MD5="b27947f3045220faf16e4d9158cbfe13"

RUN set -xe; \
	\
	fetchDeps=' \
		wget \
		subversion \
	'; \
	if ! command -v gpg > /dev/null; then \
		fetchDeps="$fetchDeps \
			dirmngr \
			gnupg \
		"; \
	fi; \
	apt-get update; \
	apt-get install -y --no-install-recommends $fetchDeps; \
	rm -rf /var/lib/apt/lists/*; \
	\
	mkdir -p /usr/src; \
	cd /usr/src; \
	\
	wget -O php.tar.bz2 "$PHP_URL"; \
	\
	if [ -n "$PHP_SHA256" ]; then \
		echo "$PHP_SHA256 *php.tar.bz2" | sha256sum -c -; \
	fi; \
	if [ -n "$PHP_MD5" ]; then \
		echo "$PHP_MD5 *php.tar.bz2" | md5sum -c -; \
	fi; \
	\
	if [ -n "$PHP_ASC_URL" ]; then \
		wget -O php.tar.bz2.asc "$PHP_ASC_URL"; \
		export GNUPGHOME="$(mktemp -d)"; \
		for key in $GPG_KEYS; do \
			gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"; \
		done; \
		gpg --batch --verify php.tar.bz2.asc php.tar.bz2; \
		rm -rf "$GNUPGHOME"; \
	fi; \
	\
	svn export https://github.com/f-andrey/php/branches/diphost/5.2/patches /tmp/patches; \
	apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchDeps

COPY docker-php-source /usr/local/bin/

RUN set -xe; \
	\
	fetchMysqlDeps=' \
		git \
		libaio-dev \
		libnuma-dev \
		wget \
	'; \
	apt-get update && apt-get install -y --no-install-recommends $fetchMysqlDeps; \
	rm -rf /var/lib/apt/lists/*; \
	\
	groupadd -g 118 mysql \
	&& adduser --system --gid 118 --force-badname _mysql_ \
	&& usermod --shell /bin/bash _mysql_; \
	\
	cd /home/_mysql_; \
	su -l _mysql_ -c "git clone https://github.com/datacharmer/mysql-sandbox" ; \
	echo 'export PERL5LIB=/home/_mysql_/usr/local/share/perl/5.22.1' >> /home/_mysql_/.bashrc; \
	export PATH=/home/_mysql_/usr/local/bin:$PATH; \
	export PERL5LIB=/home/_mysql_/usr/local/share/perl/5.22.1; \
	cd /home/_mysql_/mysql-sandbox; \
	perl Makefile.PL PREFIX=/home/_mysql_/usr/local; \
	make && make test && make install; \
	\
	cd /home/_mysql_/; \
	wget http://ftp.iij.ad.jp/pub/db/mysql/Downloads/MySQL-5.6/mysql-5.6.35-linux-glibc2.5-x86_64.tar.gz \
	&& mkdir -p /opt/mysql/5.6.35 && cd /opt/mysql/5.6.35 && whoami && env \
	&& tar xvf /home/_mysql_/mysql-5.6.35-linux-glibc2.5-x86_64.tar.gz --strip-components=1 \
	&& chown -R _mysql_:mysql /opt/mysql && chown -R _mysql_:mysql /home/_mysql_ \
	&& export HOME=/home/_mysql_; \
	sed -i 's/exec \"low_level_make_sandbox\"/exec \"\/home\/_mysql_\/usr\/local\/bin\/low_level_make_sandbox\"/' /home/_mysql_/usr/local/bin/make_sandbox \
#	sed -i '/use strict;/a use lib \"\/home\/_mysql_\/local\/share\/perl\/5.22.1\";' /home/_mysql_/usr/local/bin/make_sandbox; \
#	head -30 /home/_mysql_/usr/local/bin/make_sandbox \
	&& cd /home/_mysql_ && su -l _mysql_ --preserve-environment -s /bin/bash -c "/home/_mysql_/usr/local/bin/make_sandbox 5.6.35 --export_binaries -- --init_options='--explicit_defaults_for_timestamp'"; \
	rm -Rf /home/_mysql_/mysql-5.6.35-linux-glibc2.5-x86_64.tar.gz; \
#	&& rm -Rf /opt/mysql/5.6.35; \
	apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $fetchMysqlDeps

RUN set -xe \
	&& buildDeps=" \
		$PHP_EXTRA_BUILD_DEPS \
		automake \
		autoconf \
		byacc \
		libtool \
		libcurl4-openssl-dev \
		libedit-dev \
		libsqlite3-dev \
		libssl-dev \
		libxml2-dev \
		freetds-dev \
		libbz2-dev \
		libc-client2007e-dev \
		libcurl4-openssl-dev \
		libfreetype6-dev \
		libgd2-dev \
		libgdbm-dev \
		libgmp-dev \
		libjpeg-dev \
		libkrb5-dev \
		libmcrypt-dev \
		libmhash-dev \
		libpcre3-dev \
		libpng-dev \
		libpspell-dev \
		libsasl2-dev \
		libsnmp-dev \
		libtidy-dev \
		libwebp-dev \
		libxml2-dev \
		libxmlrpc-epi-dev \
		libxpm-dev \
		libxslt1-dev \
		libzip-dev \
		unixodbc-dev \
		zlib1g-dev \
	" \
	&& apt-get update && apt-get install -y $buildDeps --no-install-recommends && rm -rf /var/lib/apt/lists/* \
	\
	&& export CFLAGS="$PHP_CFLAGS" \
		CPPFLAGS="$PHP_CPPFLAGS" \
		LDFLAGS="$PHP_LDFLAGS" \
	&& docker-php-source extract \
#	&& cd /home/_mysql_ && su -l _mysql_ --preserve-environment -s /bin/bash -c "/home/_mysql_/usr/local/bin/make_sandbox 5.6.35 --export_binaries -- --init_options='--explicit_defaults_for_timestamp'" \
#	&& cd /home/_mysql_/sandboxes/msb_5_6_35 && /home/_mysql_/sandboxes/msb_5_6_35/start \
	&& cd /usr/src/php \
	&& gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
	&& debMultiarch="$(dpkg-architecture --query DEB_BUILD_MULTIARCH)" \
# https://bugs.php.net/bug.php?id=74125
	&& if [ ! -d /usr/include/curl ]; then \
		ln -sT "/usr/include/$debMultiarch/curl" /usr/local/include/curl; \
	fi \
# Fix libc-client  (libc-client.so require for -fpie)
	&& ln -sf /usr/lib/libc-client.a /usr/lib/x86_64-linux-gnu/libc-client.a \
	&& ln -sf /usr/lib/libc-client.so /usr/lib/x86_64-linux-gnu/libc-client.so \
# This configure patches
	&& apt-get update && apt remove -y autoconf && apt install -y autoconf2.13 \
	&& ln -s /usr/bin/autoconf2.13 /usr/bin/autoconf \
	&& ln -s /usr/bin/autoheader2.13 /usr/bin/autoheader \
	&& ln -s /usr/bin/autoreconf2.13 /usr/bin/autoreconf \
	&& ln -s /etc/autoconf2.13/acconfig.h /usr/share/autoconf2.13/acconfig.h \
	&& export MYSQL_DIR=/opt/mysql/5.6.35 && export MYSQL_INC_DIR=/opt/mysql/5.6.35/include \
	&& curl https://www.artfiles.org/gnu.org/bison/bison-2.4.tar.bz2 -o /tmp/bison-2.4.tar.bz2 \
	&& curl ftp://ftp.gnu.org/old-gnu/gnu-0.2/src/flex-2.5.4.tar.gz -o /tmp/flex-2.5.4.tar.gz \
	&& curl http://ftp.gnu.org/gnu/libiconv/libiconv-1.15.tar.gz -o /tmp/libiconv-1.15.tar.gz \
	&& mkdir -p /opt/bison && cd /opt/ && tar xvf /tmp/bison-2.4.tar.bz2 \
	&& mkdir -p /opt/flex && cd /opt/ && tar xvf /tmp/flex-2.5.4.tar.gz \
	&& mkdir -p /opt/libiconv && cd /opt/ && tar xvf /tmp/libiconv-1.15.tar.gz \
	&& cd /opt/bison-2.4 && ./configure --prefix=/opt/bison && make install clean \
	&& cd /opt/flex-2.5.4 && ./configure --prefix=/opt/flex && make install clean \
	&& cd /opt/libiconv-1.15 && ./configure --prefix=/opt/libiconv --libdir=/opt/libiconv/lib/x86_64-linux-gnu && make install clean \
	&& cd /usr/src/php && rm -Rf /opt/bison-2.4 && export YACC=/opt/bison/bin/bison \
	&& rm -Rf /opt/flex-2.5.4 && export LEX=/opt/flex/bin/flex \
	&& rm -Rf /opt/libiconv-1.15 \
	&& ln -s /usr/include/x86_64-linux-gnu/gmp.h /usr/include/gmp.h \
	&& find /tmp/patches/ -type f -name '*.patch' -print0 | sort -z -t \0 | xargs -0 -I '{}' sh -c "patch -N -p2 -s < '{}'; echo '{}'" \
	&& ./buildconf --force \
        && patch -N -p2 -s < /tmp/patches/0000_bison-flex \
	&& PHP_VERSION_CONFIGURE_ARGS=" \
		--with-openssl=/usr \
		--with-openssl-dir=/usr \
		--with-sqlite=shared \
		--with-mhash=shared \
		--with-iconv=shared,/opt/libiconv \
		--enable-zend-multibyte \
		--enable-sqlite-utf8 \
		--with-xmlrpc=shared \
		--with-xpm-dir= \
		--with-regex=php \
		--with-zend-vm=CALL \
		--with-curlwrappers \
		--enable-spl \
		--enable-dbase=shared \
		--with-gnu-ld \
		--with-iconv-dir=/opt/libiconv \
	" \
	&& PHP_LIST_CONFIGURE_ARGS=" \
		--with-apxs2=/usr/bin/apxs \
		--disable-cgi \
		--enable-ipv6 \
		--enable-reflection \
		--enable-libxml \
		--with-pcre-regex \
		--with-zlib=shared,/usr \
		--with-pcre-dir \
		--with-zlib-dir=/usr \
		--enable-bcmath=shared, \
		--with-bz2=shared \
		--enable-calendar=shared \
		--enable-ctype=shared, \
		--with-curl=shared, \
		--enable-dba=shared, \
		--enable-inifile \
		--enable-flatfile \
		--enable-dom \
		--enable-exif=shared \
		--enable-filter=shared \
		--enable-ftp=shared \
		--with-gd=shared \
		--enable-gd-jis-conv \
		--with-jpeg-dir=/usr \
		--with-png-dir=/usr \
		--with-freetype-dir=/usr \
		--with-gettext=shared \
		--enable-hash=shared \
		--with-imap=shared \
		--with-kerberos \
		--with-imap-ssl \
		--enable-json=shared \
		--enable-mbstring=shared \
		--enable-mbregex \
		--enable-mbregex-backtrack \
		--with-libmbfl \
		--with-mysql=shared,/opt/mysql/5.6.35 \
		--with-mysql-sock=/tmp/mysql_sandbox5635.sock \
		--with-mysqli=shared,/opt/mysql/5.6.35/bin/mysql_config \
		--with-unixODBC=shared,/usr \
		--enable-pcntl=shared \
		--enable-pdo=shared \
		--with-pdo-mysql=shared,/opt/mysql/5.6.35/bin/mysql_config \
		--with-pdo-sqlite=shared,/usr \
		--enable-posix=shared \
		--enable-session=shared \
		--enable-shmop=shared \
		--enable-simplexml \
		--enable-soap=shared \
		--enable-sockets=shared \
		--enable-sysvmsg=shared \
		--enable-sysvsem=shared \
		--enable-sysvshm=shared \
		--enable-tokenizer=shared \
		--enable-wddx=shared \
		--enable-xml \
		--enable-xmlreader=shared \
		--enable-xmlwriter=shared \
		--with-xsl=shared \
		--enable-zip \
		--with-gmp=shared \
		--with-pear \
		--with-system-tzdata \
		--with-libxml-dir=/usr \
		--with-libedit=shared \
		--with-readline=shared \
		--with-gdbm=shared \
		--with-snmp=shared \
		--with-tidy=shared \
		--localstatedir=/var \
		" \
	&& ./configure \
		--build="$gnuArch" \
		--host="$gnuArch" \
		--disable-all \
		--enable-shared \
		--disable-static \
		--with-config-file-path="$PHP_INI_DIR" \
		--with-config-file-scan-dir="$PHP_INI_DIR/conf.d" \
		\
		--disable-cgi \
		\
# --enable-ftp is included here because ftp_ssl_connect() needs ftp to be compiled statically (see https://github.com/docker-library/php/issues/236)
#		--enable-ftp \
# --enable-mbstring is included here because otherwise there's no way to get pecl to use it properly (see https://github.com/docker-library/php/issues/195)
#		--enable-mbstring \
# --enable-mysqlnd is included here because it's harder to compile after the fact than extensions are (since it's a plugin for several extensions, not an extension in itself)
#		--enable-mysqlnd \
		\
#		--with-curl \
#		--with-libedit \
#		--with-openssl \
#		--with-zlib \
		\
# bundled pcre does not support JIT on s390x
# https://manpages.debian.org/stretch/libpcre3-dev/pcrejit.3.en.html#AVAILABILITY_OF_JIT_SUPPORT
		$(test "$gnuArch" = 's390x-linux-gnu' && echo '--without-pcre-jit') \
		--with-libdir="lib/$debMultiarch" \
		\
		$PHP_LIST_CONFIGURE_ARGS \
		$PHP_VERSION_CONFIGURE_ARGS \
		$PHP_EXTRA_CONFIGURE_ARGS \
	&& make -j "$(nproc)" \
	&& make install \
	&& { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true; } \
	&& make clean \
	&& cd / \
	&& docker-php-source delete \
	\
	&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $buildDeps \
	\
# https://github.com/docker-library/php/issues/443
	&& pecl update-channels \
	&& rm -rf /tmp/pear ~/.pearrc

COPY docker-php-ext-* docker-php-entrypoint /usr/local/bin/

ENTRYPOINT ["docker-php-entrypoint"]
##<autogenerated>##
COPY apache2-foreground /usr/local/bin/
WORKDIR /var/www/html

EXPOSE 80
CMD ["apache2-foreground"]
##</autogenerated>##
